{
  "package": "me.jellysquid.mods.sodium.mixin",
  "required": true,
  "compatibilityLevel": "JAVA_16",
  "plugin": "me.jellysquid.mods.sodium.mixin.SodiumMixinPlugin",
  "injectors": {
    "defaultRequire": 1
  },
  "overwrites": {
    "conformVisibility": true
  },
  "client": [
    "core.MixinMinecraftClient",
    "core.MixinSinglePreparationResourceReloader",
    "core.model.MixinBlockColors",
    "core.model.MixinItemColors",
    "core.pipeline.MixinBakedQuad",
    "core.pipeline.MixinBufferBuilder",
    "core.pipeline.MixinVertexConsumer",
    "core.pipeline.MixinVertexFormat",
    "features.block.MixinBlockModelRenderer",
    "features.block.MixinSignBlockEntityRenderer",
    "features.buffer_builder.fast_advance.MixinBufferBuilder",
    "features.buffer_builder.fast_sort.MixinBufferBuilder",
    "features.buffer_builder.fast_sort.MixinBufferBuilder$MixinState",
    "features.buffer_builder.intrinsics.MixinBufferBuilder",
    "features.buffer_builder.intrinsics.MixinSpriteTexturedVertexConsumer",
    "features.buffer_builder.intrinsics.MixinVertexConsumerDual",
    "features.buffer_builder.intrinsics.MixinWorldRenderer",
    "features.chunk_rendering.MixinChunkBuilder",
    "features.chunk_rendering.MixinClientChunkManager",
    "features.chunk_rendering.MixinClientChunkManager$MixinClientChunkMap",
    "features.chunk_rendering.MixinClientWorld",
    "features.chunk_rendering.MixinLightmapTextureManager",
    "features.chunk_rendering.MixinPackedIntegerArray",
    "features.chunk_rendering.MixinPalettedContainer",
    "features.chunk_rendering.MixinWorldRenderer",
    "features.debug.MixinDebugHud",
    "features.entity.cull.MixinEntityRenderer",
    "features.entity.fast_render.MixinCuboid",
    "features.entity.fast_render.MixinModelPart",
    "features.entity.instancing.MixinBufferBuilder",
    "features.entity.instancing.MixinGameRenderer",
    "features.entity.instancing.MixinGlUniform",
    "features.entity.instancing.MixinMatrixStack",
    "features.entity.instancing.MixinModelPart",
    "features.entity.instancing.MixinModelPartData",
    "features.entity.instancing.MixinModels",
    "features.entity.instancing.MixinMultiPhase",
    "features.entity.instancing.MixinMultiPhaseParameters",
    "features.entity.instancing.MixinRenderLayer",
    "features.entity.instancing.MixinRenderPhase",
    "features.entity.instancing.MixinRenderPhaseShader",
    "features.entity.instancing.MixinSpriteTexturedVertexConsumer",
    "features.entity.instancing.MixinVertexBuffer",
    "features.entity.instancing.MixinVertexConsumerProviderImmediate",
    "features.entity.instancing.MixinWorldRenderer",
    "features.fast_biome_colors.MixinBackgroundRenderer",
    "features.fast_biome_colors.MixinBlock",
    "features.fast_biome_colors.MixinClientWorld",
    "features.fast_biome_colors.MixinFluid",
    "features.font.MixinFontManager",
    "features.font.MixinFontStorage",
    "features.font.MixinGlyphRenderer",
    "features.font.MixinTextRenderer",
    "features.font.MixinTextRendererDrawer",
    "features.gui.MixinDebugHud",
    "features.gui.MixinHandledScreen",
    "features.gui.fast_loading_screen.MixinLevelLoadingScreen",
    "features.item.MixinInGameHud",
    "features.item.MixinItemRenderer",
    "features.matrix_stack.MixinMatrixStack",
    "features.matrix_stack.MixinVertexConsumer",
    "features.model.MixinMultipartBakedModelBuilder",
    "features.model.MixinWeightedBakedModelBuilder",
    "features.options.MixinInGameHud",
    "features.options.MixinOptionsScreen",
    "features.options.MixinWorldRenderer",
    "features.particle.cull.MixinParticleManager",
    "features.particle.fast_render.MixinBillboardParticle",
    "features.render_layer.MixinRenderLayers",
    "features.shader.MixinShader",
    "features.skip_empty_draw.BufferRendererAccessor",
    "features.skip_empty_draw.RenderLayerMixin",
    "features.sky.MixinWorldRenderer",
    "features.texture_tracking.MixinSprite",
    "features.texture_tracking.MixinSpriteAnimation",
    "features.texture_tracking.MixinSpriteAtlasTexture",
    "features.texture_tracking.MixinSpriteBillboardParticle",
    "features.texture_updates.MixinSpriteInterpolated"
  ]
}